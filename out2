/*   main.c                                             :+:      :+:    :+:   */
/*   Created: 2024/01/29 13:53:49 by hbelle            #+#    #+#             */
/*   Updated: 2024/02/14 13:57:38 by hbelle           ###   ########.fr       */
int	main(int ac, char **av, char **env)
    struct sigaction sa;
    sa.sa_handler = interrupt_handle;
    sa.sa_flags = SA_RESTART; // to restart functions if interrupted
    sigemptyset(&sa.sa_mask); // to empty the signal set
    sigaction(SIGINT, &sa, NULL); // ctrl + c
  	signal(SIGQUIT, SIG_IGN); // ignore ctrl + backslash
	(void)ac;
	(void)av;
   	 	m.input = readline("$>");
			add_history(m.input);
				error_handle(&m, "", "", 1000);
					error_handle(&m, "", "", 1000);
/*   main.c                                             :+:      :+:    :+:   */
/*   Created: 2024/01/29 13:53:49 by hbelle            #+#    #+#             */
/*   Updated: 2024/02/14 13:57:38 by hbelle           ###   ########.fr       */
int	main(int ac, char **av, char **env)
    struct sigaction sa;
    sa.sa_handler = interrupt_handle;
    sa.sa_flags = SA_RESTART; // to restart functions if interrupted
    sigemptyset(&sa.sa_mask); // to empty the signal set
    sigaction(SIGINT, &sa, NULL); // ctrl + c
  	signal(SIGQUIT, SIG_IGN); // ignore ctrl + backslash
	(void)ac;
	(void)av;
   	 	m.input = readline("$>");
			add_history(m.input);
				error_handle(&m, "", "", 1000);
					error_handle(&m, "", "", 1000);
